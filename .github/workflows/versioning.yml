name: Increment Version

on:
  push:
    branches: [ "main" ] 
    paths:
      - 'version.json'
  pull_request:
    branches: [ "main" ]


jobs:
  increment-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          fetch-depth: '0'

      - name: Check for changes in version.json
        id: version-changed
        run: |
          if git diff --name-only HEAD^ | grep -q 'version.json'; then
            echo "Version file changed"
            echo "::set-output name=version_changed::true"
          else
            echo "Version file not changed"
            echo "::set-output name=version_changed::false"
          fi

      - name: Get current version
        id: get-version
        run: |
          if [[ "${{ steps.version-changed.outputs.version_changed }}" == "true" ]]; then
            CURRENT_VERSION=$(jq -r .baseVersion version.json)
            echo "Current Version: $CURRENT_VERSION"
            echo "::set-output name=current_version::$CURRENT_VERSION"
          fi
      - name: Increment Version
        id: increment-version
        run: |
          if [[ "${{ steps.version-changed.outputs.version_changed }}" == "true" ]]; then
            CURRENT_VERSION="${{ steps.get-version.outputs.current_version }}"
            IFS='.' read -ra PARTS <<< "$CURRENT_VERSION"
            MAJOR="${PARTS[0]}"
            MINOR="${PARTS[1]}"
            PATCH="${PARTS[2]}"
            
            if [[ "${{ github.ref }}" == "refs/tags/${MAJOR}.${MINOR}" ]]; then
              ((PATCH++))
            fi
            
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            echo "New Version: $NEW_VERSION"
            echo "::set-output name=new_version::$NEW_VERSION"
          fi

      - name: Create and push new tag
        id: create-tag
        if: steps.increment-version.outputs.new_version != ''
        run: |
          if [[ "${{ steps.version-changed.outputs.version_changed }}" == "true" ]]; then
            NEW_VERSION="${{ steps.increment-version.outputs.new_version }}"
            git tag -a "$NEW_VERSION" -m "Incremented version to $NEW_VERSION"
            git push origin "$NEW_VERSION"
          fi          